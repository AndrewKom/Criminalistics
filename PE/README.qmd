---
title: "Volatility Framework" 
format:   
  md:     
    output-file: README.md 
editor: visual 
---

# Анализ служебных структур исполняемых файлов формата PE

## Подготовка программ для анализа

Возьмем актуальный Chrome установщик

![](images/clipboard-1806333955.png)

Для более приятной работы с будущим анализом и выявлением ресурсов и перемещаемых элементов создадим небольшое приложение в Visual Studio 2022.

![](images/clipboard-516050402.png)

Начинаем работать с программой FileInsight. Откроем исследуемые файлы в данной программе.

Установщик:

![](images/clipboard-3336850817.png)

Созданное приложение:

![](images/clipboard-986245868.png)

## Анализ

### Выявление основных полей заголовков исполняемого файла

Согласно спецификации исполняемый файл состоит из нескольких частей:

-   DOS – заголовок

-   DOS – заглушка

-   NT – заголовок

-   Заголовки секций

-   Секции

Для дальнейшего анализа DOS – заголовка необходимо определить его структуру.

![](images/clipboard-3039520539.png)

Всего у нас 19 полей в заголовке. Нам необходимо выделить из них только 2 основных. Нас интересуют 2 поля: e_magic и e_lfanew. Поле e_magic содержит двухбайтовое значение 0х4D5A, что в кодировке ASCII соответствует буквам MZ. Данные буквы являются своего рода «опознавательной» сигнатурой, которые указывают, что файл является исполняемым форматом для операционной системы Windows. Поле e_lfanew содержит смещение, которое указывает на начало основного заголовка исполняемого файла – NT-заголовка.

![](images/clipboard-1955981872.png)

Поле e_lfanew содержит смещение 264 байт. Отсчитываем данный промежуток и переходим к началу NT-заголовка.

![](images/clipboard-2783040882.png)

Для дальнейшего анализа NT – заголовка необходимо определить его структуру.

![](images/clipboard-1212073146.png)

В свою очередь IMAGE_FILE_HEADER и IMAGE_OPTIONAL_HEADER имеют свою вложенную структуру.

![](images/clipboard-660947618.png)

![](images/clipboard-1119617921.png)

Проведем анализ структуры NT-заголовка. Выделяем структуру Signature и File Header.

-   Signature - Первая часть NT-заголовка, является указателем на его начало и представляет собой сигнатуру, которая должна быть равна значению 0х50450000, что в кодировке ASCII соответствует символам «РЕ00».

-   File Header - Файловый заголовок содержит множество полей, некоторые из которых являются важнейшими, и без них исполняемый файл просто не будет работать.

-   Поле Machine определяет тип центрального процессора, для которого предназначен файл. (0x014С – Intel 386)

-   Поле NumberOfSection определяет количество секций в исполняемом файле. (5)

-   Поле TimeDateStamp содержит время создания исполняемого файла, компоновщиком. Представлено по стандарту POSIX(UNIX).

![](images/clipboard-1995765979.png)

-   Поле Characteristics содержит флаги, которые определяют атрибуты исполняемого файла. (0x0102 - Индикатор о том, что файл проверен (валидный) и может быть запущен и Индикатор, соответствует тому, что исполняемый файл является 32-х разрядным.

![](images/clipboard-2279233221.png)

Третьим компонентом NT-заголовка является «опциональный» заголовок – Optional Header.

1\. Поле Magic указывает разрядность исполняемого файла (PE32 или PE32+). 0x010b – PE32

2\. Поле AddressOfEntryPoint содержит относительный виртуальный адрес  (Relative Virtual Address, RVA), точки входа, с которого программа начинает выполнение. (4F0E)

3\. Поля SizeOfCode и SizeOfInitializedData содержат суммарные размеры программных секций и секций, инициализированных данных (не включая сегменты программного кода), соответственно. (17400)

4\. Поле BaseOfCode содержит относительный виртуальный адрес (RVA), секции кода при загрузке в память.  (4096)

5\. Поле BaseOfData содержит относительный виртуальный адрес (RVA), секции данных при загрузке в память. (102400)

6\. Поле ImageBase содержит предпочтительный адрес загрузки исполняемого файла в память. (400000)

7\. Поле SectionAlignment содержит значение выравнивания секции в байтах при выгрузке в виртуальную память. Значение должно быть больше или эквивалентно значению поля FileAlignment. (1000)

8\. Поле FileAlignment содержит значение выравнивания «сырых» данных секции в байтах на диске. (200)

9\. Поле CheckSum содержит значение контрольной суммы всего образа (исполняемого файла). (15EC6B)

10\. Поле Subsystem содержит сведения о подсистеме запуска исполняемого файла. 00 02 (Приложения с графическим интерфейсом)

11\. Поле DllCharacteristics содержит флаги, которые определяют дополнительные атрибуты исполняемого файла. (8140)

![](images/clipboard-2913390026.png)

В конце опционального заголовка расположен массив структур типа IMAGE_DATA_DIRECTORY.

![](images/clipboard-2090434333.png)

Заголовки секций представляют собой массив данных типа IMAGE_SECTION_HEADER, который описывает размещений секций в исполняемом файле и, соответственно, в памяти после загрузки. \
![](images/clipboard-2978331817.png)

1 Поле Name содержит массив символов, определяющих название секции. (.text)

2 Поле PhysicalAddress\|VirtualSize может иметь различное назначение в зависимости от того, находится ли оно в объектном или же в исполняемом файле. Для исполняемых файлов используется поле VirtualSize в котором содержится размер секции (не выравненный). (17243)

3 Поле VirtualAddress содержит относительный виртуальный адрес загрузки секции в память. Это смещение вычисляется относительно предпочтительного адреса загрузки исполняемого файла (ImageBase). (1000)

4 Поле SizeOfRawData содержит размер секции, выравненный по значению поля FileAlignment. (17400)

5 Поле PointerToRawData содержит адрес секции относительно начала исполняемого файла. (400)

6 Поле Characteristics содержит флаги, которые определяют атрибуты секции исполняемого файла. (60000020).

![](images/clipboard-1737838219.png)

Аналогично поля будут для остальных заголовков секций: .rdata, .data, .rsrc, .reloc.

![](images/clipboard-3746879935.png)

Легко определить, где начинаются сами секции данных (PointerToRawData):

-   .text – 400

-   .rdata – 17800

-   .data – 1E800

-   .rsrc – 1F200

-   .reloc – 151E00

![](images/clipboard-1392717448.png)

![](images/clipboard-1807156223.png)

### Выявление заголовков импорта исполняемого файла

### Выявление ресурсов и перемещаемых элементов
